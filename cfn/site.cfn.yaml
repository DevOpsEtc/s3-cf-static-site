AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy IAM group/policy/user, S3 buckets, CloudFront and Route53.'

Parameters:
  DomainName:
    Description: 'name of domain pointing to static website, e.g domain.com'
    Type: String
  GroupName:
    Description: 'username with admin level access to S3 buckets'
    Type: String

Resources:
  IAMUserGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref GroupName

  IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub '${GroupName}-Admin'
      Groups:
        - !Ref IAMUserGroup

  IAMUserGroupPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Ref GroupName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: FullAdminS3BucketStaticSite
            Effect: "Allow"
            Action: "*"
            Resource:
              - !Sub 'arn:aws:s3:::${S3Bucket}/*'
              - !Sub 'arn:aws:s3:::${S3Bucket}'
              - !Sub 'arn:aws:s3:::${S3BucketLog}/*'
              - !Sub 'arn:aws:s3:::${S3BucketLog}'
      Groups:
        - Ref: IAMUserGroup

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: 'index.html'
        ErrorDocument: error.html

  S3BucketLog:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${DomainName}-log'
    DependsOn:
      - S3Bucket

  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Sid: ReadAccess
            Action:
              - 's3:GetObject'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:s3:::${S3Bucket}/*'
            Principal: '*'

  # CloudFrontDistribution:
  #   Type: 'AWS::CloudFront::Distribution'
  #   Properties:
  #     DistributionConfig:
  #       Aliases:
  #       - !Ref DomainName
  #       Comment: !Ref DomainName
  #       Origins:
  #       - DomainName: !Select [2, !Split ['/', !GetAtt 'S3Bucket.WebsiteURL']]
  #         Id: s3origin
  #         CustomOriginConfig:
  #           OriginProtocolPolicy: 'http-only'
  #       DefaultCacheBehavior:
  #         AllowedMethods:
  #         - DELETE
  #         - GET
  #         - HEAD
  #         - OPTIONS
  #         - PATCH
  #         - POST
  #         - PUT
  #         ForwardedValues:
  #           QueryString: false
  #           Cookies:
  #             Forward: none
  #         TargetOriginId: s3origin
  #         ViewerProtocolPolicy: 'redirect-to-https'
  #       Enabled: true
  #       HttpVersion: http2
  #       PriceClass: 'PriceClass_All'
  #       ViewerCertificate:
  #         AcmCertificateArn: !If [HasCreateAcmCertificate, !Ref Certificate, !If [HasAcmCertificateArn, !Ref ExistingCertificate, !Ref 'AWS::NoValue']]
  #         IamCertificateId: !If [HasIamCertificateId, !Ref ExistingCertificate, !Ref 'AWS::NoValue']
  #         SslSupportMethod: 'sni-only'
  #         MinimumProtocolVersion: TLSv1
