AWSTemplateFormatVersion: 2010-09-09
Description: Production and CI/CD bootstrap for S3-based static site

Parameters:
  DomainName:
    Description: Zone apex domain that points to S3 buckect storing static site
    Type: String
  RepoURL:
    Description: CodeCommit repo url; needed for CodeBuild project
    Type: String
  SiteName:
    Description: Name of S3 static site project
    Type: String

Resources:
  SiteCertificate:
    Description: Requests SSL/TLS certificate for domain
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub 'www.${DomainName}'

  SiteBucket:
    Description: Bucket that serves static site
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  SiteBucketLog:
    Description: Bucket that stores static site logs
    DependsOn: SiteBucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'log.${DomainName}'

  SiteBucketRedirect:
    Description: Redirects www to bare domain
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'www.${DomainName}'
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DomainName
          Protocol: https

  SiteBucketPolicy:
    Description: Policy for S3 bucket storing static site; public access
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Statement:
          - Sid: ReadAccess
            Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:s3:::${SiteBucket}/*'
            Principal: '*'

  SiteDistro:
    Description: CDN distribution that serves cached static site objects
    DependsOn:
      - SiteBucket
      - SiteBucketLog
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - Ref: DomainName
        Comment: !Sub 'CDN for S3-backed website: ${DomainName}'
        Origins:
          - DomainName: !Select [2, !Split ['/', !GetAtt SiteBucket.WebsiteURL]]
            Id: S3Origin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          AllowedMethods: # other methods: DELETE,OPTIONS,PATCH,POST,PUT
            - GET
            - HEAD
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        Logging:
          IncludeCookies: false
          Bucket: !Sub 'log.${DomainName}.s3.amazonaws.com'
          Prefix: logs/
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref SiteCertificate
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only

  SiteDistroRedirect:
    Description: CDN redirect for subdomain to bare domain
    DependsOn:
      - SiteBucketRedirect
      - SiteCertificate
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub 'www.${DomainName}'
        Comment: !Sub 'Redirect www.${DomainName} => ${DomainName}'
        Origins:
          - DomainName: !Select [2, !Split ['/', !GetAtt SiteBucketRedirect.WebsiteURL]]
            Id: S3Origin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          AllowedMethods: # other methods: DELETE,OPTIONS,PATCH,POST,PUT
            - GET
            - HEAD
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref SiteCertificate
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only

  Route53Record:
    Description: Resolves zone apex and subdomain aliases to CloudFront distro
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainName}.'
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # required AWS CloudFront zone
            DNSName: !GetAtt SiteDistro.DomainName
        - Name: !Sub 'www.${DomainName}' # redirect
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # required AWS CloudFront zone
            DNSName: !GetAtt SiteDistroRedirect.DomainName

  IAMUserGroup:
    Description: IAM user group for SSH git access
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref SiteName

  IAMUser:
    Description: IAM user getting SSH git access
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub '${SiteName}-Admin'
      Groups:
        - !Ref IAMUserGroup

  IAMUserGroupPolicy:
    Description: Policy assigning permissions related to SSH git access
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${SiteName}-Git-Policy'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid:  CodeCommitAdminAccess
            Effect: Allow
            Action:
              - codecommit:BatchGet*
              - codecommit:Get*
              - codecommit:List*
              - codecommit:Create*
              - codecommit:DeleteBranch
              - codecommit:Describe*
              - codecommit:Put*
              - codecommit:Post*
              - codecommit:Merge*
              - codecommit:Test*
              - codecommit:Update*
              - codecommit:GitPull
              - codecommit:GitPush
            Resource:
              - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${DomainName}'
      Groups:
        - Ref: IAMUserGroup

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#  CI/CD
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  SiteRepo:
    Description: Code repository used as source by CodePipeline during run
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref DomainName

  SitePipelineRole:
    Description: IAM role assumed by CodePipeline during run
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com

  SitePipelineRolePolicy:
    Description: Policy for CodePipeline run
    DependsOn: SitePipelineRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${SiteName}-Pipeline-Policy'
      Roles:
        - Ref: SitePipelineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - codepipeline:*
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*'
          - Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:UploadArchive
              - codecommit:GetUploadArchiveStatus
              - codecommit:CancelUploadArchive
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:*'
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - codebuild:StopBuild
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:*
            Effect: Allow
            Resource: '*' # !GetAtt SiteBucket.Arn

  SiteBuildRole:
    Description: IAM role assumed by CodeBuild during run
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com

  SiteBuildRolePolicy:
    Description: Policy for CodeBuild run
    Type: AWS::IAM::Policy
    DependsOn: SiteBuildRole
    Properties:
      PolicyName: !Sub '${SiteName}-Build-Policy'
      Roles:
        - !Ref SiteBuildRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:List*
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Effect: Allow
            Resource: '*'
          - Action:
              - logs:*
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
          - Action:
              - cloudfront:CreateInvalidation
              - cloudfront:GetInvalidation
              - cloudfront:ListInvalidations
            Effect: Allow
            Resource: '*'

  SiteBuildProd:
    Description: Generate static site and sync output to production S3 bucket
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:8.11.0 # will be needed for npm installs
        # EnvironmentVariables:
        #   - Name:
        #     Value:
        Type: LINUX_CONTAINER
      Name: !Sub '${SiteName}-Build-Prod'
      ServiceRole: !Ref SiteBuildRole
      Source:
        BuildSpec: config/buildspec_prod.yaml
        Location: !Ref RepoURL
        Type: CODECOMMIT
      TimeoutInMinutes: 5 # optional; between 5 and 480 minutes (8 hours)

  SitePipelineProd:
    Description: Static site production pipeline; watches repo & triggers build
    DependsOn:
      - SitePipelineRolePolicy
      - SiteBuildProd
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt SitePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref SiteBucketLog
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                BranchName: 'master'
                RepositoryName: !GetAtt [SiteRepo, Name]
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref SiteBuildProd
              InputArtifacts:
                - Name: SourceOutput
              # OutputArtifacts:
              #   - Name: BuildOutput
              RunOrder: 1
